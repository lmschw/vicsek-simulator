Analysis of low noise percentages:
    With little noise (0.5-2.5%), two groups form: 
        NEAREST & LOD create comparatively many clusters while FARTHEST, HOD & RANDOM do not form significant clusters
    With noise at 3%, HOD switches group and starts exhibiting seemlingly more clusters. 
        On visual inspection, the overall direction appears stable

Attempts to create switching behaviour:
    Start with random initialisation, NEAREST and 0% noise
    change to 0.5% noise after 1000 steps -> change to exploration behaviour -> clusters become more spread out and larger
    change back to 0% noise after 4000 steps -> change back to a single direction -> instead clusters become smaller and denser again
    -> unsuccessful

    Start with random initialisation, FARTHEST and 0.5% noise
    change to NEAREST after 1000 steps -> change to exploration behaviour
    change back to FARTHEST after 4000 steps -> change back to a single direction, albeit with non-equidistant distribution
    -> successful

    Start with random initialisation, FARTHEST and 1% noise
    change to NEAREST after 1000 steps -> change to exploration behaviour
    change back to FARTHEST after 4000 steps -> change back to a single direction, albeit with non-equidistant distribution
    -> successful. Faster, stronger reaction to switching

    same with 1.5% but it seems too much noise. outliers happen even in ordered state. 
    Conclustion: 1% seems best. NEAREST vs. FARTHEST appears to work well. Less computational load than LOD/HOD

Move switch on individual particles as preparation for external input:
    Difficulty choosing the update method for the mode 
        -> most frequent does not allow changes
        -> second most frequent leads to constant oscillations and thus prevents a change in behaviour
        -> random chance of switching to a less frequent one leads to switches but not to a change in behaviour.
    Even when updating a group of particles at the same time, no behaviour adaptations arise

Ideas:
    - Add marker to changes in mode -> new changes could be valued more highly
    



TODO:
- add method to set numcells = domainArea / (radius**2)
- possibly parallelise for loops
- start draft for paper on overleaf
- recreate key figures in pdf or vector-based
- fix matrix representation
- at least 10 runs of each
- research literature
- 

TODO:
- try to replicate findings from other fish papers with our approach
- implement active elastic
- look for papers with similiar approach (neighbour selection, adaptive networks)
- run experiments for switching
- create figures
- check who cites Calvao & Brigatti (2014)

additional: try with borders (necessary to reproduce fish experiments)


- run k =3 for high noise for longer (10'000 or 100'000 steps (from order and from disorder))
- try local order with threshold for individual switching - > propagration possible?
- rewrite with 3 sections:
    - the modes and their effects
    - global switching
    - local switching
            -> density as additional material
- redo experiments for 5-8 particles
- isolate HOD and see if density/noise switch for HOD could lead to switching as well
- try k-switching 
- check out histeresis (for sinus-curve like switching)
- fix graphs with illustrator
- replace image captions with main point I'm trying to make with it
- focus on literature research


- graph for 10 particles at 10 time steps during runs: scatterplot of all neighbours: x - orientation difference, y - distance to the particle
    - possibly video
    - aggregate over a few timesteps for each plot (e.g. 5-10) adding all neighbours from every steps
    - focus on areas with a switch (order to disorder or vice versa)
- individuals: 
    - change direction or mode/k of a subset (1%, 10%...) of the individuals and see if the information propagates
        - pick randomly overall
        - pick within a local area
- taxonomy for neighbour selection
- look for mathematical basis for behaviours


- use threshold switching
- plot position on x-axis (distance) against timestep and show the number of particles within that position as a colourmap -- entropy for mode comparison
- plot position on y-axis (orientation alignment) against timestep and show the number of particles within that position as a colourmap -- entropy for mode comparison
- implement switching to a specific angle
- implement switching to alignment
- average window for local order or running average: avg(t+1) = avg(t) + alpha * (local order + avg(t)) with alpha between 0 and 1
- global/local, small/large difference, random/alignment changes
- impose fixed percentages of order/disorder value and figure out turning points

07.05.24:
- what if quick dip across threshold -> add conditions that above threshold always order, below lower threshold always disorder
- use tau to determine lower and upper thresholds (tau and 1-tau)
- anamoly detection -> variance -> 2sigma variance -> switch
    - plot variance and standard deviation -> highlight outlies -> for single particles
- run single experiment until it works as expected
- find a more formal expression for both threshold mechanisms -> discrete or continuous, formula etc.

14.05.24:
- assign random orientation as baseline event effect
- increase radius to make 10% or 20% or the domain visible to the particle
- increase density/decrease domainSize
- plot min, average, max number of neighbours visible to individual particles
- plot matrix: per timestep show number of particles with x neighbours (0, 1, 2-3, 4-6, 7-10, >10)
- try the following:
    - higher number of previous steps (150 or 200)
    - blocking the decision making after every decision for (10-100 steps)
    - increase radius/change domainSize to achieve different levels of connectivity -> certain range of average number of neighbours


+ find a way to investigate why random switches to order in the beginning

29.05.2024:
- turn with 90Â°
- place predator where there is low density
- place predator outside of domain
- does a higher threshold lead to slow converge to order?
- find mechanisms for:
    - switch only on event (both directions)
    - always converge slowly to order
-> eliminate options (choose threholdType, radius, density etc.)
- practice run for the presentation next week
- buy laptop
- check GPU access -> Kevin
- Rippers account -> Karen
- do not include walls
- Monday at uni (spontaneous meeting)

maybe try adding a probability to choose order randomly to make slow converge possible?

todo 05.06. (no meeting):
- measure the speed of information spread (duration until all of them have changed value)
- replace HOD graph in presentation
- add graphs to overleaf
- add distance cohesion, criticality and 3D to list
- improve food behaviour (stopping, depleting)
- vary speed (stopping, accelerating depending on the event type)?
- tidy code
- update docstrings
- find critical event percentage to cause switching
- implement occlusion

Inputs from trial presentation:
- try different angles for TURN 
- overlay percentage of values over order -> maybe also look at time just around switch
- affect exactly 30%, 40%... of particles ignoring the radius but starting from the point of origin
- information spread metric?
- switch values directly (like an event but not affecting orientation but value choice instead) when they can see the event
    - maybe add a level of alarm to individual that will make them keep the value while it is > 0

- maybe heatmap video of local order